#pragma once
#define MAX 10
class Matriz
{
private:
    int mat[10][10];
    int m,n;
public:
    Matriz(int _n, int _m);
    ~Matriz(void);
    void cargarmat();
    void mostrarmat();
    void devolvermat(int _mat[10][10]);
    void sumarmat(int _mat1[10][10],int _mat2[10][10]);
	void transpuesta(int _mat1[MAX][MAX]);
	void multiplicar (int _mat1[10][10],int _mat2[10][10]);
};

matriz.cpp

#include "StdAfx.h"
#include "matriz.h"
#include "iostream"
using namespace std;

Matriz::Matriz(int _n,int _m)
{
    n=_n;
    m=_m;

}
Matriz::~Matriz(void)
{
}

void Matriz::cargarmat()
{
    for (int a=0;a<n;a++)
        for (int b=0;b<m;b++)
        {
            cout<<"ingresar m["<<a<<"]["<<b<<"]=";
            cin>>mat[a][b];
        }
    }


void Matriz::mostrarmat()
{
    for (int a=0;a<n;a++)
        {
            for (int b=0;b<m;b++)
            {
                cout<<mat[a][b]<<"\t";
            }
            cout<<endl;
        }
}


void Matriz::devolvermat(int _mat[10][10])
{
    for (int a=0;a<n;a++)
        for (int b=0;b<m;b++)
        {
            _mat[a][b]=mat[a][b];
        }
}

void Matriz::sumarmat(int _mat1[10][10],int _mat2[10][10])
{
    for (int a=0;a<n;a++)
        for (int b=0;b<m;b++)
			mat[a][b]=_mat1[a][b]+_mat2[a][b];

}

void Matriz::transpuesta(int _mat1[MAX][MAX])
{
int aux;
	 for (int a=0;a<n;a++)
        for (int b=0;b<m;b++)
		 mat[a][b]=_mat1[b][a];
aux=m;
m=n;
n=aux;
}

void Matriz::multiplicar(int A[MAX][MAX], int B[MAX][MAX])
{
	int i,j,k,acum=0;
	for(i=0; i<n; i++){
		for(j=0; j<m; j++){
			acum=0;
			for (k=0; k<m ;k++){
				acum=acum + (A[i][k]*B[k][j]);
			}
			mat[i][j]=acum;
		}
	}

}
#include "StdAfx.h"
#include "Matriz.h"
#include "iostream"
#include "conio.h"
using namespace std;

ejemplomatriz.cpp

void main()
{
    int nrow,ncol,mat1[10][10],mat2[10][10],opc;
    do{
        cout<<"ingrese num fil: ";
        cin>>nrow;
    }while(nrow<0||nrow>10);

    do{
        cout<<"ingrese num col: ";
        cin>>ncol;
    }while(ncol<0||ncol>10);
	Matriz m1(nrow,ncol);
	Matriz m2(nrow,ncol);
	Matriz m3(nrow,ncol);
	do{
	 cout<<endl<<endl<<"------------------------------MENU---------------------------";
	 cout<<endl<<endl<<"1.-Cargar.";
	 cout<<endl<<"2.-Mostrar.";
	 cout<<endl<<"3.-Matriz transpuesta.";
	 cout<<endl<<"4.-Suma de matrices.";
	 cout<<endl<<"5.-mostrar multiplicacion";
	 cout<<endl<<"0.Salir";
	 cout<<endl<<endl<<"Seleccione su opcion";
	 cin>>opc;
	 switch(opc)
	 {
	 case 1:
		m1.cargarmat();
		 break;
	 case 2:
		m1.mostrarmat();
		 break;
	 case 3:
		 {
		 m1.devolvermat(mat1);
		 m1.transpuesta(mat1);
		 break;
		 }
	 case 4:
		 {
			 m1.devolvermat(mat1);// manda los datos de la clase al main- programa
			 cout<<"cargar la matriz:\n";
			 m2.cargarmat();
			 m2.devolvermat(mat2);
			 m3.sumarmat(mat1,mat2);
			 cout<<"mostrar segunda matriz"<<endl;
			 m2.mostrarmat();
			 cout<<"mostrar el resultado de la suma:\n";
			 m3.mostrarmat();
			 getch();
		 break;
		 }

	 case 5:
		  {
			 m1.devolvermat(mat1);// manda los datos de la clase al main- programa
			 cout<<"cargar la matriz:\n";
			 m2.cargarmat();
			 m2.devolvermat(mat2);
			 m3.multiplicar(mat1,mat2);
			 cout<<"mostrar segunda matriz"<<endl;
			 m2.mostrarmat();
			 cout<<"mostrar el resultado de la multiplicacion:\n";
			 m3.mostrarmat();
			 getch();
		 break;
		 }
	 }
	}while(opc!=0);
    getch();

}
